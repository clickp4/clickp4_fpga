/*
 * Generated by Bluespec Compiler, version 2014.07.A (build 34078, 2014-07-30)
 * 
 * On Sun Jun  4 00:06:35 CST 2017
 * 
 */
#include "bluesim_primitives.h"
#include "mkStreamGearboxUp_16_32.h"


/* Literal declarations */
static unsigned int const UWide_literal_128_h0_arr[] = { 0u, 0u, 0u, 0u };
static tUWide const UWide_literal_128_h0(128u, UWide_literal_128_h0_arr);
static unsigned int const UWide_literal_178_h0_arr[] = { 0u, 0u, 0u, 0u, 0u, 0u };
static tUWide const UWide_literal_178_h0(178u, UWide_literal_178_h0_arr);


/* Constructor */
MOD_mkStreamGearboxUp_16_32::MOD_mkStreamGearboxUp_16_32(tSimStateHdl simHdl,
							 char const *name,
							 Module *parent)
  : Module(simHdl, name, parent),
    __clk_handle_0(BAD_CLOCK_HANDLE),
    INST_data_bytes(simHdl, "data_bytes", this, 64u, 0llu, (tUInt8)0u),
    INST_eopCount(simHdl, "eopCount", this, 64u, 0llu, (tUInt8)0u),
    INST_idle_cycles(simHdl, "idle_cycles", this, 64u, 0llu, (tUInt8)0u),
    INST_inProgress(simHdl, "inProgress", this, 1u, (tUInt8)0u, (tUInt8)0u),
    INST_in_ff(simHdl, "in_ff", this, 178u, 2u, 1u, 0u),
    INST_oddBeat(simHdl, "oddBeat", this, 1u, (tUInt8)1u, (tUInt8)0u),
    INST_out_ff(simHdl, "out_ff", this, 322u, 2u, 1u, 0u),
    INST_sopCount(simHdl, "sopCount", this, 64u, 0llu, (tUInt8)0u),
    INST_v_prev(simHdl, "v_prev", this, 178u, UWide_literal_178_h0, (tUInt8)0u),
    PORT_RST_N((tUInt8)1u),
    DEF_in_ff_first____d5(178u),
    DEF_v_prev___d80(178u),
    DEF__read_data__h3097(128u),
    DEF_in_ff_first_BITS_145_TO_18___d69(128u),
    DEF_in_ff_first_BITS_177_TO_146_8_CONCAT_0_CONCAT__ETC___d73(322u),
    DEF_x_data__h1616(256u),
    DEF_v_prev_0_BITS_177_TO_146_1_CONCAT_in_ff_first__ETC___d91(322u),
    DEF_x_data__h2908(256u),
    DEF_dataout_get__avValue1(322u)
{
  PORT_datain_put.setSize(178u);
  PORT_datain_put.clear();
  PORT_dataout_get.setSize(322u);
  PORT_dataout_get.clear();
  symbol_count = 16u;
  symbols = new tSym[symbol_count];
  init_symbols_0();
}


/* Symbol init fns */

void MOD_mkStreamGearboxUp_16_32::init_symbols_0()
{
  init_symbol(&symbols[0u], "data_bytes", SYM_MODULE, &INST_data_bytes);
  init_symbol(&symbols[1u], "datain_put", SYM_PORT, &PORT_datain_put, 178u);
  init_symbol(&symbols[2u], "dataout_get", SYM_PORT, &PORT_dataout_get, 322u);
  init_symbol(&symbols[3u], "eopCount", SYM_MODULE, &INST_eopCount);
  init_symbol(&symbols[4u], "idle_cycles", SYM_MODULE, &INST_idle_cycles);
  init_symbol(&symbols[5u], "in_ff", SYM_MODULE, &INST_in_ff);
  init_symbol(&symbols[6u], "inProgress", SYM_MODULE, &INST_inProgress);
  init_symbol(&symbols[7u], "oddBeat", SYM_MODULE, &INST_oddBeat);
  init_symbol(&symbols[8u], "oddBeat__h767", SYM_DEF, &DEF_oddBeat__h767, 1u);
  init_symbol(&symbols[9u], "out_ff", SYM_MODULE, &INST_out_ff);
  init_symbol(&symbols[10u], "RL_count_idle_cycles", SYM_RULE);
  init_symbol(&symbols[11u], "RL_readPacketEven", SYM_RULE);
  init_symbol(&symbols[12u], "RL_readPacketOdd", SYM_RULE);
  init_symbol(&symbols[13u], "RL_startOfPacket", SYM_RULE);
  init_symbol(&symbols[14u], "sopCount", SYM_MODULE, &INST_sopCount);
  init_symbol(&symbols[15u], "v_prev", SYM_MODULE, &INST_v_prev);
}


/* Rule actions */

void MOD_mkStreamGearboxUp_16_32::RL_startOfPacket()
{
  tUInt64 DEF_x__h706;
  tUInt8 DEF_NOT_in_ff_first_BIT_1___d9;
  tUInt8 DEF_in_ff_first_BIT_1___d6;
  DEF_in_ff_first____d5 = INST_in_ff.METH_first();
  DEF_x__h731 = INST_sopCount.METH_read();
  DEF_in_ff_first_BIT_1___d6 = DEF_in_ff_first____d5.get_bits_in_word8(0u, 1u, 1u);
  DEF_NOT_in_ff_first_BIT_1___d9 = !DEF_in_ff_first_BIT_1___d6;
  DEF_x__h706 = DEF_x__h731 + 1llu;
  INST_inProgress.METH_write(DEF_in_ff_first_BIT_1___d6);
  if (DEF_in_ff_first_BIT_1___d6)
    INST_sopCount.METH_write(DEF_x__h706);
  if (DEF_NOT_in_ff_first_BIT_1___d9)
    INST_in_ff.METH_deq();
}

void MOD_mkStreamGearboxUp_16_32::RL_readPacketOdd()
{
  tUInt32 DEF_x_user__h1615;
  DEF_in_ff_first____d5 = INST_in_ff.METH_first();
  DEF_x__h2201 = INST_data_bytes.METH_read();
  DEF_x__h3368 = INST_eopCount.METH_read();
  DEF_oddBeat__h767 = INST_oddBeat.METH_read();
  wop_primExtractWide(128u,
		      178u,
		      DEF_in_ff_first____d5,
		      32u,
		      145u,
		      32u,
		      18u,
		      DEF_in_ff_first_BITS_145_TO_18___d69);
  DEF_b__h1058 = DEF_in_ff_first____d5.get_bits_in_word8(0u, 17u, 1u);
  DEF_x_user__h1615 = primExtract32(32u, 178u, DEF_in_ff_first____d5, 32u, 177u, 32u, 146u);
  DEF_b__h1046 = DEF_in_ff_first____d5.get_bits_in_word8(0u, 16u, 1u);
  DEF_b__h1034 = DEF_in_ff_first____d5.get_bits_in_word8(0u, 15u, 1u);
  DEF_b__h1022 = DEF_in_ff_first____d5.get_bits_in_word8(0u, 14u, 1u);
  DEF_b__h1010 = DEF_in_ff_first____d5.get_bits_in_word8(0u, 13u, 1u);
  DEF_b__h998 = DEF_in_ff_first____d5.get_bits_in_word8(0u, 12u, 1u);
  DEF_b__h986 = DEF_in_ff_first____d5.get_bits_in_word8(0u, 11u, 1u);
  DEF_b__h962 = DEF_in_ff_first____d5.get_bits_in_word8(0u, 9u, 1u);
  DEF_b__h974 = DEF_in_ff_first____d5.get_bits_in_word8(0u, 10u, 1u);
  DEF_b__h950 = DEF_in_ff_first____d5.get_bits_in_word8(0u, 8u, 1u);
  DEF_b__h938 = DEF_in_ff_first____d5.get_bits_in_word8(0u, 7u, 1u);
  DEF_b__h926 = DEF_in_ff_first____d5.get_bits_in_word8(0u, 6u, 1u);
  DEF_b__h902 = DEF_in_ff_first____d5.get_bits_in_word8(0u, 4u, 1u);
  DEF_b__h914 = DEF_in_ff_first____d5.get_bits_in_word8(0u, 5u, 1u);
  DEF_b__h890 = DEF_in_ff_first____d5.get_bits_in_word8(0u, 3u, 1u);
  DEF_b__h878 = DEF_in_ff_first____d5.get_bits_in_word8(0u, 2u, 1u);
  DEF_NOT_oddBeat_5___d76 = !DEF_oddBeat__h767;
  DEF_in_ff_first_BIT_0___d10 = DEF_in_ff_first____d5.get_bits_in_word8(0u, 0u, 1u);
  DEF_NOT_in_ff_first_BIT_0_0___d11 = !DEF_in_ff_first_BIT_0___d10;
  DEF_x__h3358 = DEF_x__h3368 + 1llu;
  DEF_y__h883 = (tUInt8)31u & DEF_b__h878;
  DEF_y__h895 = (tUInt8)31u & DEF_b__h890;
  DEF_y__h907 = (tUInt8)31u & DEF_b__h902;
  DEF_y__h919 = (tUInt8)31u & DEF_b__h914;
  DEF_y__h931 = (tUInt8)31u & DEF_b__h926;
  DEF_y__h943 = (tUInt8)31u & DEF_b__h938;
  DEF_y__h955 = (tUInt8)31u & DEF_b__h950;
  DEF_y__h967 = (tUInt8)31u & DEF_b__h962;
  DEF_y__h979 = (tUInt8)31u & DEF_b__h974;
  DEF_y__h991 = (tUInt8)31u & DEF_b__h986;
  DEF_y__h1003 = (tUInt8)31u & DEF_b__h998;
  DEF_y__h1039 = (tUInt8)31u & DEF_b__h1034;
  DEF_y__h1015 = (tUInt8)31u & DEF_b__h1010;
  DEF_y__h1027 = (tUInt8)31u & DEF_b__h1022;
  DEF_x__h1050 = (tUInt8)31u & DEF_b__h1058;
  DEF_y__h1051 = (tUInt8)31u & DEF_b__h1046;
  DEF_x__h1038 = (tUInt8)31u & (DEF_x__h1050 + DEF_y__h1051);
  DEF_x__h1026 = (tUInt8)31u & (DEF_x__h1038 + DEF_y__h1039);
  DEF_x__h1014 = (tUInt8)31u & (DEF_x__h1026 + DEF_y__h1027);
  DEF_x__h1002 = (tUInt8)31u & (DEF_x__h1014 + DEF_y__h1015);
  DEF_x__h990 = (tUInt8)31u & (DEF_x__h1002 + DEF_y__h1003);
  DEF_x__h978 = (tUInt8)31u & (DEF_x__h990 + DEF_y__h991);
  DEF_x__h966 = (tUInt8)31u & (DEF_x__h978 + DEF_y__h979);
  DEF_x__h954 = (tUInt8)31u & (DEF_x__h966 + DEF_y__h967);
  DEF_x__h942 = (tUInt8)31u & (DEF_x__h954 + DEF_y__h955);
  DEF_x__h930 = (tUInt8)31u & (DEF_x__h942 + DEF_y__h943);
  DEF_x__h918 = (tUInt8)31u & (DEF_x__h930 + DEF_y__h931);
  DEF_x__h906 = (tUInt8)31u & (DEF_x__h918 + DEF_y__h919);
  DEF_x__h894 = (tUInt8)31u & (DEF_x__h906 + DEF_y__h907);
  DEF_x__h882 = (tUInt8)31u & (DEF_x__h894 + DEF_y__h895);
  DEF_x__h859 = (tUInt8)31u & (DEF_x__h882 + DEF_y__h883);
  DEF_y__h856 = (tUInt64)(DEF_x__h859);
  DEF_x__h845 = DEF_x__h2201 + DEF_y__h856;
  DEF_x_data__h1616.set_whole_word(UWide_literal_128_h0.get_whole_word(3u),
				   7u).set_whole_word(UWide_literal_128_h0.get_whole_word(2u),
						      6u).set_whole_word(UWide_literal_128_h0.get_whole_word(1u),
									 5u).build_concat((((tUInt64)(UWide_literal_128_h0.get_whole_word(0u))) << 32u) | (tUInt64)(DEF_in_ff_first_BITS_145_TO_18___d69.get_whole_word(3u)),
											  96u,
											  64u).set_whole_word(DEF_in_ff_first_BITS_145_TO_18___d69.get_whole_word(2u),
													      2u).set_whole_word(DEF_in_ff_first_BITS_145_TO_18___d69.get_whole_word(1u),
																 1u).set_whole_word(DEF_in_ff_first_BITS_145_TO_18___d69.get_whole_word(0u),
																		    0u);
  DEF_in_ff_first_BITS_177_TO_146_8_CONCAT_0_CONCAT__ETC___d73.set_bits_in_word((tUInt8)(DEF_x_user__h1615 >> 30u),
										10u,
										0u,
										2u).set_whole_word((((tUInt32)(1073741823u & DEF_x_user__h1615)) << 2u) | (tUInt32)(DEF_x_data__h1616.get_bits_in_word8(7u,
																									30u,
																									2u)),
												   9u).set_whole_word(primExtract32(32u,
																    256u,
																    DEF_x_data__h1616,
																    32u,
																    253u,
																    32u,
																    222u),
														      8u).set_whole_word(primExtract32(32u,
																		       256u,
																		       DEF_x_data__h1616,
																		       32u,
																		       221u,
																		       32u,
																		       190u),
																	 7u).set_whole_word(primExtract32(32u,
																					  256u,
																					  DEF_x_data__h1616,
																					  32u,
																					  189u,
																					  32u,
																					  158u),
																			    6u).set_whole_word(primExtract32(32u,
																							     256u,
																							     DEF_x_data__h1616,
																							     32u,
																							     157u,
																							     32u,
																							     126u),
																					       5u).set_whole_word(primExtract32(32u,
																										256u,
																										DEF_x_data__h1616,
																										32u,
																										125u,
																										32u,
																										94u),
																								  4u).set_whole_word(primExtract32(32u,
																												   256u,
																												   DEF_x_data__h1616,
																												   32u,
																												   93u,
																												   32u,
																												   62u),
																										     3u).set_whole_word(primExtract32(32u,
																														      256u,
																														      DEF_x_data__h1616,
																														      32u,
																														      61u,
																														      32u,
																														      30u),
																													2u).set_whole_word((DEF_x_data__h1616.get_bits_in_word32(0u,
																																				 0u,
																																				 30u) << 2u) | (tUInt32)((tUInt8)(0u)),
																															   1u).set_whole_word((((tUInt32)(16383u & 0u)) << 18u) | DEF_in_ff_first____d5.get_bits_in_word32(0u,
																																											   0u,
																																											   18u),
																																	      0u);
  INST_in_ff.METH_deq();
  INST_data_bytes.METH_write(DEF_x__h845);
  if (DEF_in_ff_first_BIT_0___d10)
    INST_out_ff.METH_enq(DEF_in_ff_first_BITS_177_TO_146_8_CONCAT_0_CONCAT__ETC___d73);
  if (DEF_in_ff_first_BIT_0___d10)
    INST_inProgress.METH_write((tUInt8)0u);
  if (DEF_in_ff_first_BIT_0___d10)
    INST_eopCount.METH_write(DEF_x__h3358);
  if (DEF_NOT_in_ff_first_BIT_0_0___d11)
    INST_oddBeat.METH_write(DEF_NOT_oddBeat_5___d76);
  INST_v_prev.METH_write(DEF_in_ff_first____d5);
}

void MOD_mkStreamGearboxUp_16_32::RL_readPacketEven()
{
  tUInt32 DEF_x_mask__h2909;
  tUInt32 DEF__read_mask__h3098;
  tUInt32 DEF_x_user__h2907;
  DEF_v_prev___d80 = INST_v_prev.METH_read();
  DEF_in_ff_first____d5 = INST_in_ff.METH_first();
  DEF_x__h2201 = INST_data_bytes.METH_read();
  DEF_x__h3368 = INST_eopCount.METH_read();
  DEF_oddBeat__h767 = INST_oddBeat.METH_read();
  wop_primExtractWide(128u,
		      178u,
		      DEF_in_ff_first____d5,
		      32u,
		      145u,
		      32u,
		      18u,
		      DEF_in_ff_first_BITS_145_TO_18___d69);
  wop_primExtractWide(128u, 178u, DEF_v_prev___d80, 32u, 145u, 32u, 18u, DEF__read_data__h3097);
  DEF_x_user__h2907 = primExtract32(32u, 178u, DEF_v_prev___d80, 32u, 177u, 32u, 146u);
  DEF__read_mask__h3098 = DEF_v_prev___d80.get_bits_in_word32(0u, 2u, 16u);
  DEF_b__h1046 = DEF_in_ff_first____d5.get_bits_in_word8(0u, 16u, 1u);
  DEF_b__h1058 = DEF_in_ff_first____d5.get_bits_in_word8(0u, 17u, 1u);
  DEF_b__h1034 = DEF_in_ff_first____d5.get_bits_in_word8(0u, 15u, 1u);
  DEF_b__h1022 = DEF_in_ff_first____d5.get_bits_in_word8(0u, 14u, 1u);
  DEF_b__h1010 = DEF_in_ff_first____d5.get_bits_in_word8(0u, 13u, 1u);
  DEF_b__h986 = DEF_in_ff_first____d5.get_bits_in_word8(0u, 11u, 1u);
  DEF_b__h998 = DEF_in_ff_first____d5.get_bits_in_word8(0u, 12u, 1u);
  DEF_b__h974 = DEF_in_ff_first____d5.get_bits_in_word8(0u, 10u, 1u);
  DEF_b__h962 = DEF_in_ff_first____d5.get_bits_in_word8(0u, 9u, 1u);
  DEF_b__h950 = DEF_in_ff_first____d5.get_bits_in_word8(0u, 8u, 1u);
  DEF_b__h926 = DEF_in_ff_first____d5.get_bits_in_word8(0u, 6u, 1u);
  DEF_b__h938 = DEF_in_ff_first____d5.get_bits_in_word8(0u, 7u, 1u);
  DEF_b__h914 = DEF_in_ff_first____d5.get_bits_in_word8(0u, 5u, 1u);
  DEF_b__h902 = DEF_in_ff_first____d5.get_bits_in_word8(0u, 4u, 1u);
  DEF_b__h878 = DEF_in_ff_first____d5.get_bits_in_word8(0u, 2u, 1u);
  DEF_b__h890 = DEF_in_ff_first____d5.get_bits_in_word8(0u, 3u, 1u);
  DEF_in_ff_first_BIT_0___d10 = DEF_in_ff_first____d5.get_bits_in_word8(0u, 0u, 1u);
  DEF_NOT_oddBeat_5___d76 = !DEF_oddBeat__h767;
  DEF_x__h3358 = DEF_x__h3368 + 1llu;
  DEF_y__h883 = (tUInt8)31u & DEF_b__h878;
  DEF_y__h895 = (tUInt8)31u & DEF_b__h890;
  DEF_y__h907 = (tUInt8)31u & DEF_b__h902;
  DEF_y__h919 = (tUInt8)31u & DEF_b__h914;
  DEF_y__h931 = (tUInt8)31u & DEF_b__h926;
  DEF_y__h943 = (tUInt8)31u & DEF_b__h938;
  DEF_y__h955 = (tUInt8)31u & DEF_b__h950;
  DEF_y__h967 = (tUInt8)31u & DEF_b__h962;
  DEF_y__h979 = (tUInt8)31u & DEF_b__h974;
  DEF_y__h991 = (tUInt8)31u & DEF_b__h986;
  DEF_y__h1003 = (tUInt8)31u & DEF_b__h998;
  DEF_y__h1015 = (tUInt8)31u & DEF_b__h1010;
  DEF_y__h1027 = (tUInt8)31u & DEF_b__h1022;
  DEF_y__h1039 = (tUInt8)31u & DEF_b__h1034;
  DEF_x__h1050 = (tUInt8)31u & DEF_b__h1058;
  DEF_y__h1051 = (tUInt8)31u & DEF_b__h1046;
  DEF_x__h1038 = (tUInt8)31u & (DEF_x__h1050 + DEF_y__h1051);
  DEF_x__h1026 = (tUInt8)31u & (DEF_x__h1038 + DEF_y__h1039);
  DEF_x__h1014 = (tUInt8)31u & (DEF_x__h1026 + DEF_y__h1027);
  DEF_x__h1002 = (tUInt8)31u & (DEF_x__h1014 + DEF_y__h1015);
  DEF_x__h990 = (tUInt8)31u & (DEF_x__h1002 + DEF_y__h1003);
  DEF_x__h978 = (tUInt8)31u & (DEF_x__h990 + DEF_y__h991);
  DEF_x__h966 = (tUInt8)31u & (DEF_x__h978 + DEF_y__h979);
  DEF_x__h954 = (tUInt8)31u & (DEF_x__h966 + DEF_y__h967);
  DEF_x__h942 = (tUInt8)31u & (DEF_x__h954 + DEF_y__h955);
  DEF_x__h930 = (tUInt8)31u & (DEF_x__h942 + DEF_y__h943);
  DEF_x__h918 = (tUInt8)31u & (DEF_x__h930 + DEF_y__h931);
  DEF_x__h906 = (tUInt8)31u & (DEF_x__h918 + DEF_y__h919);
  DEF_x__h894 = (tUInt8)31u & (DEF_x__h906 + DEF_y__h907);
  DEF_x__h882 = (tUInt8)31u & (DEF_x__h894 + DEF_y__h895);
  DEF_x__h859 = (tUInt8)31u & (DEF_x__h882 + DEF_y__h883);
  DEF_y__h856 = (tUInt64)(DEF_x__h859);
  DEF_x__h845 = DEF_x__h2201 + DEF_y__h856;
  DEF_x_data__h2908.set_whole_word(DEF_in_ff_first_BITS_145_TO_18___d69.get_whole_word(3u),
				   7u).set_whole_word(DEF_in_ff_first_BITS_145_TO_18___d69.get_whole_word(2u),
						      6u).set_whole_word(DEF_in_ff_first_BITS_145_TO_18___d69.get_whole_word(1u),
									 5u).build_concat((((tUInt64)(DEF_in_ff_first_BITS_145_TO_18___d69.get_whole_word(0u))) << 32u) | (tUInt64)(DEF__read_data__h3097.get_whole_word(3u)),
											  96u,
											  64u).set_whole_word(DEF__read_data__h3097.get_whole_word(2u),
													      2u).set_whole_word(DEF__read_data__h3097.get_whole_word(1u),
																 1u).set_whole_word(DEF__read_data__h3097.get_whole_word(0u),
																		    0u);
  DEF_x_mask__h2909 = (DEF_in_ff_first____d5.get_bits_in_word32(0u,
								2u,
								16u) << 16u) | DEF__read_mask__h3098;
  DEF_v_prev_0_BITS_177_TO_146_1_CONCAT_in_ff_first__ETC___d91.set_bits_in_word((tUInt8)(DEF_x_user__h2907 >> 30u),
										10u,
										0u,
										2u).set_whole_word((((tUInt32)(1073741823u & DEF_x_user__h2907)) << 2u) | (tUInt32)(DEF_x_data__h2908.get_bits_in_word8(7u,
																									30u,
																									2u)),
												   9u).set_whole_word(primExtract32(32u,
																    256u,
																    DEF_x_data__h2908,
																    32u,
																    253u,
																    32u,
																    222u),
														      8u).set_whole_word(primExtract32(32u,
																		       256u,
																		       DEF_x_data__h2908,
																		       32u,
																		       221u,
																		       32u,
																		       190u),
																	 7u).set_whole_word(primExtract32(32u,
																					  256u,
																					  DEF_x_data__h2908,
																					  32u,
																					  189u,
																					  32u,
																					  158u),
																			    6u).set_whole_word(primExtract32(32u,
																							     256u,
																							     DEF_x_data__h2908,
																							     32u,
																							     157u,
																							     32u,
																							     126u),
																					       5u).set_whole_word(primExtract32(32u,
																										256u,
																										DEF_x_data__h2908,
																										32u,
																										125u,
																										32u,
																										94u),
																								  4u).set_whole_word(primExtract32(32u,
																												   256u,
																												   DEF_x_data__h2908,
																												   32u,
																												   93u,
																												   32u,
																												   62u),
																										     3u).set_whole_word(primExtract32(32u,
																														      256u,
																														      DEF_x_data__h2908,
																														      32u,
																														      61u,
																														      32u,
																														      30u),
																													2u).set_whole_word((DEF_x_data__h2908.get_bits_in_word32(0u,
																																				 0u,
																																				 30u) << 2u) | (tUInt32)((tUInt8)(DEF_x_mask__h2909 >> 30u)),
																															   1u).set_whole_word(((((tUInt32)(1073741823u & DEF_x_mask__h2909)) << 2u) | (((tUInt32)(DEF_v_prev___d80.get_bits_in_word8(0u,
																																														     1u,
																																														     1u))) << 1u)) | (tUInt32)(DEF_v_prev___d80.get_bits_in_word8(0u,
																																																						  0u,
																																																						  1u) || DEF_in_ff_first_BIT_0___d10),
																																	      0u);
  INST_in_ff.METH_deq();
  INST_data_bytes.METH_write(DEF_x__h845);
  INST_out_ff.METH_enq(DEF_v_prev_0_BITS_177_TO_146_1_CONCAT_in_ff_first__ETC___d91);
  if (DEF_in_ff_first_BIT_0___d10)
    INST_inProgress.METH_write((tUInt8)0u);
  if (DEF_in_ff_first_BIT_0___d10)
    INST_eopCount.METH_write(DEF_x__h3358);
  INST_oddBeat.METH_write(DEF_NOT_oddBeat_5___d76);
}

void MOD_mkStreamGearboxUp_16_32::RL_count_idle_cycles()
{
  tUInt64 DEF_x__h3415;
  DEF_x__h3420 = INST_idle_cycles.METH_read();
  DEF_x__h3415 = DEF_x__h3420 + 1llu;
  INST_idle_cycles.METH_write(DEF_x__h3415);
}


/* Methods */

void MOD_mkStreamGearboxUp_16_32::METH_datain_put(tUWide ARG_datain_put)
{
  PORT_datain_put = ARG_datain_put;
  INST_in_ff.METH_enq(ARG_datain_put);
}

tUInt8 MOD_mkStreamGearboxUp_16_32::METH_RDY_datain_put()
{
  tUInt8 DEF_CAN_FIRE_datain_put;
  tUInt8 PORT_RDY_datain_put;
  DEF_CAN_FIRE_datain_put = INST_in_ff.METH_i_notFull();
  PORT_RDY_datain_put = DEF_CAN_FIRE_datain_put;
  return PORT_RDY_datain_put;
}

tUWide MOD_mkStreamGearboxUp_16_32::METH_dataout_get()
{
  DEF_dataout_get__avValue1 = INST_out_ff.METH_first();
  PORT_dataout_get = DEF_dataout_get__avValue1;
  INST_out_ff.METH_deq();
  return PORT_dataout_get;
}

tUInt8 MOD_mkStreamGearboxUp_16_32::METH_RDY_dataout_get()
{
  tUInt8 DEF_CAN_FIRE_dataout_get;
  tUInt8 PORT_RDY_dataout_get;
  DEF_CAN_FIRE_dataout_get = INST_out_ff.METH_i_notEmpty();
  PORT_RDY_dataout_get = DEF_CAN_FIRE_dataout_get;
  return PORT_RDY_dataout_get;
}

tUInt64 MOD_mkStreamGearboxUp_16_32::METH_getEopCount()
{
  tUInt64 PORT_getEopCount;
  DEF_x__h3368 = INST_eopCount.METH_read();
  PORT_getEopCount = DEF_x__h3368;
  return PORT_getEopCount;
}

tUInt8 MOD_mkStreamGearboxUp_16_32::METH_RDY_getEopCount()
{
  tUInt8 DEF_CAN_FIRE_getEopCount;
  tUInt8 PORT_RDY_getEopCount;
  DEF_CAN_FIRE_getEopCount = (tUInt8)1u;
  PORT_RDY_getEopCount = DEF_CAN_FIRE_getEopCount;
  return PORT_RDY_getEopCount;
}

tUInt64 MOD_mkStreamGearboxUp_16_32::METH_getSopCount()
{
  tUInt64 PORT_getSopCount;
  DEF_x__h731 = INST_sopCount.METH_read();
  PORT_getSopCount = DEF_x__h731;
  return PORT_getSopCount;
}

tUInt8 MOD_mkStreamGearboxUp_16_32::METH_RDY_getSopCount()
{
  tUInt8 DEF_CAN_FIRE_getSopCount;
  tUInt8 PORT_RDY_getSopCount;
  DEF_CAN_FIRE_getSopCount = (tUInt8)1u;
  PORT_RDY_getSopCount = DEF_CAN_FIRE_getSopCount;
  return PORT_RDY_getSopCount;
}

tUInt64 MOD_mkStreamGearboxUp_16_32::METH_getIdleCount()
{
  tUInt64 PORT_getIdleCount;
  DEF_x__h3420 = INST_idle_cycles.METH_read();
  PORT_getIdleCount = DEF_x__h3420;
  return PORT_getIdleCount;
}

tUInt8 MOD_mkStreamGearboxUp_16_32::METH_RDY_getIdleCount()
{
  tUInt8 DEF_CAN_FIRE_getIdleCount;
  tUInt8 PORT_RDY_getIdleCount;
  DEF_CAN_FIRE_getIdleCount = (tUInt8)1u;
  PORT_RDY_getIdleCount = DEF_CAN_FIRE_getIdleCount;
  return PORT_RDY_getIdleCount;
}

tUInt64 MOD_mkStreamGearboxUp_16_32::METH_getDataCount()
{
  tUInt64 PORT_getDataCount;
  DEF_x__h2201 = INST_data_bytes.METH_read();
  PORT_getDataCount = DEF_x__h2201;
  return PORT_getDataCount;
}

tUInt8 MOD_mkStreamGearboxUp_16_32::METH_RDY_getDataCount()
{
  tUInt8 DEF_CAN_FIRE_getDataCount;
  tUInt8 PORT_RDY_getDataCount;
  DEF_CAN_FIRE_getDataCount = (tUInt8)1u;
  PORT_RDY_getDataCount = DEF_CAN_FIRE_getDataCount;
  return PORT_RDY_getDataCount;
}


/* Reset routines */

void MOD_mkStreamGearboxUp_16_32::reset_RST_N(tUInt8 ARG_rst_in)
{
  PORT_RST_N = ARG_rst_in;
  INST_v_prev.reset_RST(ARG_rst_in);
  INST_sopCount.reset_RST(ARG_rst_in);
  INST_out_ff.reset_RST(ARG_rst_in);
  INST_oddBeat.reset_RST(ARG_rst_in);
  INST_in_ff.reset_RST(ARG_rst_in);
  INST_inProgress.reset_RST(ARG_rst_in);
  INST_idle_cycles.reset_RST(ARG_rst_in);
  INST_eopCount.reset_RST(ARG_rst_in);
  INST_data_bytes.reset_RST(ARG_rst_in);
}


/* Static handles to reset routines */


/* Functions for the parent module to register its reset fns */


/* Functions to set the elaborated clock id */

void MOD_mkStreamGearboxUp_16_32::set_clk_0(char const *s)
{
  __clk_handle_0 = bk_get_or_define_clock(sim_hdl, s);
}


/* State dumping routine */
void MOD_mkStreamGearboxUp_16_32::dump_state(unsigned int indent)
{
  printf("%*s%s:\n", indent, "", inst_name);
  INST_data_bytes.dump_state(indent + 2u);
  INST_eopCount.dump_state(indent + 2u);
  INST_idle_cycles.dump_state(indent + 2u);
  INST_inProgress.dump_state(indent + 2u);
  INST_in_ff.dump_state(indent + 2u);
  INST_oddBeat.dump_state(indent + 2u);
  INST_out_ff.dump_state(indent + 2u);
  INST_sopCount.dump_state(indent + 2u);
  INST_v_prev.dump_state(indent + 2u);
}


/* VCD dumping routines */

unsigned int MOD_mkStreamGearboxUp_16_32::dump_VCD_defs(unsigned int levels)
{
  vcd_write_scope_start(sim_hdl, inst_name);
  vcd_num = vcd_reserve_ids(sim_hdl, 79u);
  unsigned int num = vcd_num;
  for (unsigned int clk = 0u; clk < bk_num_clocks(sim_hdl); ++clk)
    vcd_add_clock_def(sim_hdl, this, bk_clock_name(sim_hdl, clk), bk_clock_vcd_num(sim_hdl, clk));
  vcd_write_def(sim_hdl, bk_clock_vcd_num(sim_hdl, __clk_handle_0), "CLK", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "NOT_in_ff_first_BIT_0_0___d11", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "NOT_oddBeat_5___d76", 1u);
  vcd_write_def(sim_hdl, num++, "RST_N", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "_read_data__h3097", 128u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h1010", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h1022", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h1034", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h1046", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h1058", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h878", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h890", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h902", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h914", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h926", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h938", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h950", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h962", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h974", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h986", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h998", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "dataout_get__avValue1", 322u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "in_ff_first_BITS_145_TO_18___d69", 128u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "in_ff_first_BITS_177_TO_146_8_CONCAT_0_CONCAT__ETC___d73", 322u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "in_ff_first_BIT_0___d10", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "in_ff_first____d5", 178u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "oddBeat__h767", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "v_prev_0_BITS_177_TO_146_1_CONCAT_in_ff_first__ETC___d91", 322u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "v_prev___d80", 178u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "x__h1002", 5u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "x__h1014", 5u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "x__h1026", 5u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "x__h1038", 5u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "x__h1050", 5u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "x__h2201", 64u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "x__h3358", 64u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "x__h3368", 64u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "x__h3420", 64u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "x__h731", 64u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "x__h845", 64u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "x__h859", 5u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "x__h882", 5u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "x__h894", 5u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "x__h906", 5u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "x__h918", 5u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "x__h930", 5u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "x__h942", 5u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "x__h954", 5u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "x__h966", 5u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "x__h978", 5u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "x__h990", 5u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "x_data__h1616", 256u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "x_data__h2908", 256u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "y__h1003", 5u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "y__h1015", 5u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "y__h1027", 5u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "y__h1039", 5u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "y__h1051", 5u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "y__h856", 64u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "y__h883", 5u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "y__h895", 5u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "y__h907", 5u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "y__h919", 5u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "y__h931", 5u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "y__h943", 5u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "y__h955", 5u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "y__h967", 5u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "y__h979", 5u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "y__h991", 5u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "datain_put", 178u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "dataout_get", 322u);
  num = INST_data_bytes.dump_VCD_defs(num);
  num = INST_eopCount.dump_VCD_defs(num);
  num = INST_idle_cycles.dump_VCD_defs(num);
  num = INST_inProgress.dump_VCD_defs(num);
  num = INST_in_ff.dump_VCD_defs(num);
  num = INST_oddBeat.dump_VCD_defs(num);
  num = INST_out_ff.dump_VCD_defs(num);
  num = INST_sopCount.dump_VCD_defs(num);
  num = INST_v_prev.dump_VCD_defs(num);
  vcd_write_scope_end(sim_hdl);
  return num;
}

void MOD_mkStreamGearboxUp_16_32::dump_VCD(tVCDDumpType dt,
					   unsigned int levels,
					   MOD_mkStreamGearboxUp_16_32 &backing)
{
  vcd_defs(dt, backing);
  vcd_prims(dt, backing);
}

void MOD_mkStreamGearboxUp_16_32::vcd_defs(tVCDDumpType dt, MOD_mkStreamGearboxUp_16_32 &backing)
{
  unsigned int num = vcd_num;
  if (dt == VCD_DUMP_XS)
  {
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 128u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 322u);
    vcd_write_x(sim_hdl, num++, 128u);
    vcd_write_x(sim_hdl, num++, 322u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 178u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 322u);
    vcd_write_x(sim_hdl, num++, 178u);
    vcd_write_x(sim_hdl, num++, 5u);
    vcd_write_x(sim_hdl, num++, 5u);
    vcd_write_x(sim_hdl, num++, 5u);
    vcd_write_x(sim_hdl, num++, 5u);
    vcd_write_x(sim_hdl, num++, 5u);
    vcd_write_x(sim_hdl, num++, 64u);
    vcd_write_x(sim_hdl, num++, 64u);
    vcd_write_x(sim_hdl, num++, 64u);
    vcd_write_x(sim_hdl, num++, 64u);
    vcd_write_x(sim_hdl, num++, 64u);
    vcd_write_x(sim_hdl, num++, 64u);
    vcd_write_x(sim_hdl, num++, 5u);
    vcd_write_x(sim_hdl, num++, 5u);
    vcd_write_x(sim_hdl, num++, 5u);
    vcd_write_x(sim_hdl, num++, 5u);
    vcd_write_x(sim_hdl, num++, 5u);
    vcd_write_x(sim_hdl, num++, 5u);
    vcd_write_x(sim_hdl, num++, 5u);
    vcd_write_x(sim_hdl, num++, 5u);
    vcd_write_x(sim_hdl, num++, 5u);
    vcd_write_x(sim_hdl, num++, 5u);
    vcd_write_x(sim_hdl, num++, 5u);
    vcd_write_x(sim_hdl, num++, 256u);
    vcd_write_x(sim_hdl, num++, 256u);
    vcd_write_x(sim_hdl, num++, 5u);
    vcd_write_x(sim_hdl, num++, 5u);
    vcd_write_x(sim_hdl, num++, 5u);
    vcd_write_x(sim_hdl, num++, 5u);
    vcd_write_x(sim_hdl, num++, 5u);
    vcd_write_x(sim_hdl, num++, 64u);
    vcd_write_x(sim_hdl, num++, 5u);
    vcd_write_x(sim_hdl, num++, 5u);
    vcd_write_x(sim_hdl, num++, 5u);
    vcd_write_x(sim_hdl, num++, 5u);
    vcd_write_x(sim_hdl, num++, 5u);
    vcd_write_x(sim_hdl, num++, 5u);
    vcd_write_x(sim_hdl, num++, 5u);
    vcd_write_x(sim_hdl, num++, 5u);
    vcd_write_x(sim_hdl, num++, 5u);
    vcd_write_x(sim_hdl, num++, 5u);
    vcd_write_x(sim_hdl, num++, 178u);
    vcd_write_x(sim_hdl, num++, 322u);
  }
  else
    if (dt == VCD_DUMP_CHANGES)
    {
      if ((backing.DEF_NOT_in_ff_first_BIT_0_0___d11) != DEF_NOT_in_ff_first_BIT_0_0___d11)
      {
	vcd_write_val(sim_hdl, num, DEF_NOT_in_ff_first_BIT_0_0___d11, 1u);
	backing.DEF_NOT_in_ff_first_BIT_0_0___d11 = DEF_NOT_in_ff_first_BIT_0_0___d11;
      }
      ++num;
      if ((backing.DEF_NOT_oddBeat_5___d76) != DEF_NOT_oddBeat_5___d76)
      {
	vcd_write_val(sim_hdl, num, DEF_NOT_oddBeat_5___d76, 1u);
	backing.DEF_NOT_oddBeat_5___d76 = DEF_NOT_oddBeat_5___d76;
      }
      ++num;
      if ((backing.PORT_RST_N) != PORT_RST_N)
      {
	vcd_write_val(sim_hdl, num, PORT_RST_N, 1u);
	backing.PORT_RST_N = PORT_RST_N;
      }
      ++num;
      if ((backing.DEF__read_data__h3097) != DEF__read_data__h3097)
      {
	vcd_write_val(sim_hdl, num, DEF__read_data__h3097, 128u);
	backing.DEF__read_data__h3097 = DEF__read_data__h3097;
      }
      ++num;
      if ((backing.DEF_b__h1010) != DEF_b__h1010)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h1010, 1u);
	backing.DEF_b__h1010 = DEF_b__h1010;
      }
      ++num;
      if ((backing.DEF_b__h1022) != DEF_b__h1022)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h1022, 1u);
	backing.DEF_b__h1022 = DEF_b__h1022;
      }
      ++num;
      if ((backing.DEF_b__h1034) != DEF_b__h1034)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h1034, 1u);
	backing.DEF_b__h1034 = DEF_b__h1034;
      }
      ++num;
      if ((backing.DEF_b__h1046) != DEF_b__h1046)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h1046, 1u);
	backing.DEF_b__h1046 = DEF_b__h1046;
      }
      ++num;
      if ((backing.DEF_b__h1058) != DEF_b__h1058)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h1058, 1u);
	backing.DEF_b__h1058 = DEF_b__h1058;
      }
      ++num;
      if ((backing.DEF_b__h878) != DEF_b__h878)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h878, 1u);
	backing.DEF_b__h878 = DEF_b__h878;
      }
      ++num;
      if ((backing.DEF_b__h890) != DEF_b__h890)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h890, 1u);
	backing.DEF_b__h890 = DEF_b__h890;
      }
      ++num;
      if ((backing.DEF_b__h902) != DEF_b__h902)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h902, 1u);
	backing.DEF_b__h902 = DEF_b__h902;
      }
      ++num;
      if ((backing.DEF_b__h914) != DEF_b__h914)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h914, 1u);
	backing.DEF_b__h914 = DEF_b__h914;
      }
      ++num;
      if ((backing.DEF_b__h926) != DEF_b__h926)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h926, 1u);
	backing.DEF_b__h926 = DEF_b__h926;
      }
      ++num;
      if ((backing.DEF_b__h938) != DEF_b__h938)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h938, 1u);
	backing.DEF_b__h938 = DEF_b__h938;
      }
      ++num;
      if ((backing.DEF_b__h950) != DEF_b__h950)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h950, 1u);
	backing.DEF_b__h950 = DEF_b__h950;
      }
      ++num;
      if ((backing.DEF_b__h962) != DEF_b__h962)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h962, 1u);
	backing.DEF_b__h962 = DEF_b__h962;
      }
      ++num;
      if ((backing.DEF_b__h974) != DEF_b__h974)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h974, 1u);
	backing.DEF_b__h974 = DEF_b__h974;
      }
      ++num;
      if ((backing.DEF_b__h986) != DEF_b__h986)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h986, 1u);
	backing.DEF_b__h986 = DEF_b__h986;
      }
      ++num;
      if ((backing.DEF_b__h998) != DEF_b__h998)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h998, 1u);
	backing.DEF_b__h998 = DEF_b__h998;
      }
      ++num;
      if ((backing.DEF_dataout_get__avValue1) != DEF_dataout_get__avValue1)
      {
	vcd_write_val(sim_hdl, num, DEF_dataout_get__avValue1, 322u);
	backing.DEF_dataout_get__avValue1 = DEF_dataout_get__avValue1;
      }
      ++num;
      if ((backing.DEF_in_ff_first_BITS_145_TO_18___d69) != DEF_in_ff_first_BITS_145_TO_18___d69)
      {
	vcd_write_val(sim_hdl, num, DEF_in_ff_first_BITS_145_TO_18___d69, 128u);
	backing.DEF_in_ff_first_BITS_145_TO_18___d69 = DEF_in_ff_first_BITS_145_TO_18___d69;
      }
      ++num;
      if ((backing.DEF_in_ff_first_BITS_177_TO_146_8_CONCAT_0_CONCAT__ETC___d73) != DEF_in_ff_first_BITS_177_TO_146_8_CONCAT_0_CONCAT__ETC___d73)
      {
	vcd_write_val(sim_hdl, num, DEF_in_ff_first_BITS_177_TO_146_8_CONCAT_0_CONCAT__ETC___d73, 322u);
	backing.DEF_in_ff_first_BITS_177_TO_146_8_CONCAT_0_CONCAT__ETC___d73 = DEF_in_ff_first_BITS_177_TO_146_8_CONCAT_0_CONCAT__ETC___d73;
      }
      ++num;
      if ((backing.DEF_in_ff_first_BIT_0___d10) != DEF_in_ff_first_BIT_0___d10)
      {
	vcd_write_val(sim_hdl, num, DEF_in_ff_first_BIT_0___d10, 1u);
	backing.DEF_in_ff_first_BIT_0___d10 = DEF_in_ff_first_BIT_0___d10;
      }
      ++num;
      if ((backing.DEF_in_ff_first____d5) != DEF_in_ff_first____d5)
      {
	vcd_write_val(sim_hdl, num, DEF_in_ff_first____d5, 178u);
	backing.DEF_in_ff_first____d5 = DEF_in_ff_first____d5;
      }
      ++num;
      if ((backing.DEF_oddBeat__h767) != DEF_oddBeat__h767)
      {
	vcd_write_val(sim_hdl, num, DEF_oddBeat__h767, 1u);
	backing.DEF_oddBeat__h767 = DEF_oddBeat__h767;
      }
      ++num;
      if ((backing.DEF_v_prev_0_BITS_177_TO_146_1_CONCAT_in_ff_first__ETC___d91) != DEF_v_prev_0_BITS_177_TO_146_1_CONCAT_in_ff_first__ETC___d91)
      {
	vcd_write_val(sim_hdl, num, DEF_v_prev_0_BITS_177_TO_146_1_CONCAT_in_ff_first__ETC___d91, 322u);
	backing.DEF_v_prev_0_BITS_177_TO_146_1_CONCAT_in_ff_first__ETC___d91 = DEF_v_prev_0_BITS_177_TO_146_1_CONCAT_in_ff_first__ETC___d91;
      }
      ++num;
      if ((backing.DEF_v_prev___d80) != DEF_v_prev___d80)
      {
	vcd_write_val(sim_hdl, num, DEF_v_prev___d80, 178u);
	backing.DEF_v_prev___d80 = DEF_v_prev___d80;
      }
      ++num;
      if ((backing.DEF_x__h1002) != DEF_x__h1002)
      {
	vcd_write_val(sim_hdl, num, DEF_x__h1002, 5u);
	backing.DEF_x__h1002 = DEF_x__h1002;
      }
      ++num;
      if ((backing.DEF_x__h1014) != DEF_x__h1014)
      {
	vcd_write_val(sim_hdl, num, DEF_x__h1014, 5u);
	backing.DEF_x__h1014 = DEF_x__h1014;
      }
      ++num;
      if ((backing.DEF_x__h1026) != DEF_x__h1026)
      {
	vcd_write_val(sim_hdl, num, DEF_x__h1026, 5u);
	backing.DEF_x__h1026 = DEF_x__h1026;
      }
      ++num;
      if ((backing.DEF_x__h1038) != DEF_x__h1038)
      {
	vcd_write_val(sim_hdl, num, DEF_x__h1038, 5u);
	backing.DEF_x__h1038 = DEF_x__h1038;
      }
      ++num;
      if ((backing.DEF_x__h1050) != DEF_x__h1050)
      {
	vcd_write_val(sim_hdl, num, DEF_x__h1050, 5u);
	backing.DEF_x__h1050 = DEF_x__h1050;
      }
      ++num;
      if ((backing.DEF_x__h2201) != DEF_x__h2201)
      {
	vcd_write_val(sim_hdl, num, DEF_x__h2201, 64u);
	backing.DEF_x__h2201 = DEF_x__h2201;
      }
      ++num;
      if ((backing.DEF_x__h3358) != DEF_x__h3358)
      {
	vcd_write_val(sim_hdl, num, DEF_x__h3358, 64u);
	backing.DEF_x__h3358 = DEF_x__h3358;
      }
      ++num;
      if ((backing.DEF_x__h3368) != DEF_x__h3368)
      {
	vcd_write_val(sim_hdl, num, DEF_x__h3368, 64u);
	backing.DEF_x__h3368 = DEF_x__h3368;
      }
      ++num;
      if ((backing.DEF_x__h3420) != DEF_x__h3420)
      {
	vcd_write_val(sim_hdl, num, DEF_x__h3420, 64u);
	backing.DEF_x__h3420 = DEF_x__h3420;
      }
      ++num;
      if ((backing.DEF_x__h731) != DEF_x__h731)
      {
	vcd_write_val(sim_hdl, num, DEF_x__h731, 64u);
	backing.DEF_x__h731 = DEF_x__h731;
      }
      ++num;
      if ((backing.DEF_x__h845) != DEF_x__h845)
      {
	vcd_write_val(sim_hdl, num, DEF_x__h845, 64u);
	backing.DEF_x__h845 = DEF_x__h845;
      }
      ++num;
      if ((backing.DEF_x__h859) != DEF_x__h859)
      {
	vcd_write_val(sim_hdl, num, DEF_x__h859, 5u);
	backing.DEF_x__h859 = DEF_x__h859;
      }
      ++num;
      if ((backing.DEF_x__h882) != DEF_x__h882)
      {
	vcd_write_val(sim_hdl, num, DEF_x__h882, 5u);
	backing.DEF_x__h882 = DEF_x__h882;
      }
      ++num;
      if ((backing.DEF_x__h894) != DEF_x__h894)
      {
	vcd_write_val(sim_hdl, num, DEF_x__h894, 5u);
	backing.DEF_x__h894 = DEF_x__h894;
      }
      ++num;
      if ((backing.DEF_x__h906) != DEF_x__h906)
      {
	vcd_write_val(sim_hdl, num, DEF_x__h906, 5u);
	backing.DEF_x__h906 = DEF_x__h906;
      }
      ++num;
      if ((backing.DEF_x__h918) != DEF_x__h918)
      {
	vcd_write_val(sim_hdl, num, DEF_x__h918, 5u);
	backing.DEF_x__h918 = DEF_x__h918;
      }
      ++num;
      if ((backing.DEF_x__h930) != DEF_x__h930)
      {
	vcd_write_val(sim_hdl, num, DEF_x__h930, 5u);
	backing.DEF_x__h930 = DEF_x__h930;
      }
      ++num;
      if ((backing.DEF_x__h942) != DEF_x__h942)
      {
	vcd_write_val(sim_hdl, num, DEF_x__h942, 5u);
	backing.DEF_x__h942 = DEF_x__h942;
      }
      ++num;
      if ((backing.DEF_x__h954) != DEF_x__h954)
      {
	vcd_write_val(sim_hdl, num, DEF_x__h954, 5u);
	backing.DEF_x__h954 = DEF_x__h954;
      }
      ++num;
      if ((backing.DEF_x__h966) != DEF_x__h966)
      {
	vcd_write_val(sim_hdl, num, DEF_x__h966, 5u);
	backing.DEF_x__h966 = DEF_x__h966;
      }
      ++num;
      if ((backing.DEF_x__h978) != DEF_x__h978)
      {
	vcd_write_val(sim_hdl, num, DEF_x__h978, 5u);
	backing.DEF_x__h978 = DEF_x__h978;
      }
      ++num;
      if ((backing.DEF_x__h990) != DEF_x__h990)
      {
	vcd_write_val(sim_hdl, num, DEF_x__h990, 5u);
	backing.DEF_x__h990 = DEF_x__h990;
      }
      ++num;
      if ((backing.DEF_x_data__h1616) != DEF_x_data__h1616)
      {
	vcd_write_val(sim_hdl, num, DEF_x_data__h1616, 256u);
	backing.DEF_x_data__h1616 = DEF_x_data__h1616;
      }
      ++num;
      if ((backing.DEF_x_data__h2908) != DEF_x_data__h2908)
      {
	vcd_write_val(sim_hdl, num, DEF_x_data__h2908, 256u);
	backing.DEF_x_data__h2908 = DEF_x_data__h2908;
      }
      ++num;
      if ((backing.DEF_y__h1003) != DEF_y__h1003)
      {
	vcd_write_val(sim_hdl, num, DEF_y__h1003, 5u);
	backing.DEF_y__h1003 = DEF_y__h1003;
      }
      ++num;
      if ((backing.DEF_y__h1015) != DEF_y__h1015)
      {
	vcd_write_val(sim_hdl, num, DEF_y__h1015, 5u);
	backing.DEF_y__h1015 = DEF_y__h1015;
      }
      ++num;
      if ((backing.DEF_y__h1027) != DEF_y__h1027)
      {
	vcd_write_val(sim_hdl, num, DEF_y__h1027, 5u);
	backing.DEF_y__h1027 = DEF_y__h1027;
      }
      ++num;
      if ((backing.DEF_y__h1039) != DEF_y__h1039)
      {
	vcd_write_val(sim_hdl, num, DEF_y__h1039, 5u);
	backing.DEF_y__h1039 = DEF_y__h1039;
      }
      ++num;
      if ((backing.DEF_y__h1051) != DEF_y__h1051)
      {
	vcd_write_val(sim_hdl, num, DEF_y__h1051, 5u);
	backing.DEF_y__h1051 = DEF_y__h1051;
      }
      ++num;
      if ((backing.DEF_y__h856) != DEF_y__h856)
      {
	vcd_write_val(sim_hdl, num, DEF_y__h856, 64u);
	backing.DEF_y__h856 = DEF_y__h856;
      }
      ++num;
      if ((backing.DEF_y__h883) != DEF_y__h883)
      {
	vcd_write_val(sim_hdl, num, DEF_y__h883, 5u);
	backing.DEF_y__h883 = DEF_y__h883;
      }
      ++num;
      if ((backing.DEF_y__h895) != DEF_y__h895)
      {
	vcd_write_val(sim_hdl, num, DEF_y__h895, 5u);
	backing.DEF_y__h895 = DEF_y__h895;
      }
      ++num;
      if ((backing.DEF_y__h907) != DEF_y__h907)
      {
	vcd_write_val(sim_hdl, num, DEF_y__h907, 5u);
	backing.DEF_y__h907 = DEF_y__h907;
      }
      ++num;
      if ((backing.DEF_y__h919) != DEF_y__h919)
      {
	vcd_write_val(sim_hdl, num, DEF_y__h919, 5u);
	backing.DEF_y__h919 = DEF_y__h919;
      }
      ++num;
      if ((backing.DEF_y__h931) != DEF_y__h931)
      {
	vcd_write_val(sim_hdl, num, DEF_y__h931, 5u);
	backing.DEF_y__h931 = DEF_y__h931;
      }
      ++num;
      if ((backing.DEF_y__h943) != DEF_y__h943)
      {
	vcd_write_val(sim_hdl, num, DEF_y__h943, 5u);
	backing.DEF_y__h943 = DEF_y__h943;
      }
      ++num;
      if ((backing.DEF_y__h955) != DEF_y__h955)
      {
	vcd_write_val(sim_hdl, num, DEF_y__h955, 5u);
	backing.DEF_y__h955 = DEF_y__h955;
      }
      ++num;
      if ((backing.DEF_y__h967) != DEF_y__h967)
      {
	vcd_write_val(sim_hdl, num, DEF_y__h967, 5u);
	backing.DEF_y__h967 = DEF_y__h967;
      }
      ++num;
      if ((backing.DEF_y__h979) != DEF_y__h979)
      {
	vcd_write_val(sim_hdl, num, DEF_y__h979, 5u);
	backing.DEF_y__h979 = DEF_y__h979;
      }
      ++num;
      if ((backing.DEF_y__h991) != DEF_y__h991)
      {
	vcd_write_val(sim_hdl, num, DEF_y__h991, 5u);
	backing.DEF_y__h991 = DEF_y__h991;
      }
      ++num;
      if ((backing.PORT_datain_put) != PORT_datain_put)
      {
	vcd_write_val(sim_hdl, num, PORT_datain_put, 178u);
	backing.PORT_datain_put = PORT_datain_put;
      }
      ++num;
      if ((backing.PORT_dataout_get) != PORT_dataout_get)
      {
	vcd_write_val(sim_hdl, num, PORT_dataout_get, 322u);
	backing.PORT_dataout_get = PORT_dataout_get;
      }
      ++num;
    }
    else
    {
      vcd_write_val(sim_hdl, num++, DEF_NOT_in_ff_first_BIT_0_0___d11, 1u);
      backing.DEF_NOT_in_ff_first_BIT_0_0___d11 = DEF_NOT_in_ff_first_BIT_0_0___d11;
      vcd_write_val(sim_hdl, num++, DEF_NOT_oddBeat_5___d76, 1u);
      backing.DEF_NOT_oddBeat_5___d76 = DEF_NOT_oddBeat_5___d76;
      vcd_write_val(sim_hdl, num++, PORT_RST_N, 1u);
      backing.PORT_RST_N = PORT_RST_N;
      vcd_write_val(sim_hdl, num++, DEF__read_data__h3097, 128u);
      backing.DEF__read_data__h3097 = DEF__read_data__h3097;
      vcd_write_val(sim_hdl, num++, DEF_b__h1010, 1u);
      backing.DEF_b__h1010 = DEF_b__h1010;
      vcd_write_val(sim_hdl, num++, DEF_b__h1022, 1u);
      backing.DEF_b__h1022 = DEF_b__h1022;
      vcd_write_val(sim_hdl, num++, DEF_b__h1034, 1u);
      backing.DEF_b__h1034 = DEF_b__h1034;
      vcd_write_val(sim_hdl, num++, DEF_b__h1046, 1u);
      backing.DEF_b__h1046 = DEF_b__h1046;
      vcd_write_val(sim_hdl, num++, DEF_b__h1058, 1u);
      backing.DEF_b__h1058 = DEF_b__h1058;
      vcd_write_val(sim_hdl, num++, DEF_b__h878, 1u);
      backing.DEF_b__h878 = DEF_b__h878;
      vcd_write_val(sim_hdl, num++, DEF_b__h890, 1u);
      backing.DEF_b__h890 = DEF_b__h890;
      vcd_write_val(sim_hdl, num++, DEF_b__h902, 1u);
      backing.DEF_b__h902 = DEF_b__h902;
      vcd_write_val(sim_hdl, num++, DEF_b__h914, 1u);
      backing.DEF_b__h914 = DEF_b__h914;
      vcd_write_val(sim_hdl, num++, DEF_b__h926, 1u);
      backing.DEF_b__h926 = DEF_b__h926;
      vcd_write_val(sim_hdl, num++, DEF_b__h938, 1u);
      backing.DEF_b__h938 = DEF_b__h938;
      vcd_write_val(sim_hdl, num++, DEF_b__h950, 1u);
      backing.DEF_b__h950 = DEF_b__h950;
      vcd_write_val(sim_hdl, num++, DEF_b__h962, 1u);
      backing.DEF_b__h962 = DEF_b__h962;
      vcd_write_val(sim_hdl, num++, DEF_b__h974, 1u);
      backing.DEF_b__h974 = DEF_b__h974;
      vcd_write_val(sim_hdl, num++, DEF_b__h986, 1u);
      backing.DEF_b__h986 = DEF_b__h986;
      vcd_write_val(sim_hdl, num++, DEF_b__h998, 1u);
      backing.DEF_b__h998 = DEF_b__h998;
      vcd_write_val(sim_hdl, num++, DEF_dataout_get__avValue1, 322u);
      backing.DEF_dataout_get__avValue1 = DEF_dataout_get__avValue1;
      vcd_write_val(sim_hdl, num++, DEF_in_ff_first_BITS_145_TO_18___d69, 128u);
      backing.DEF_in_ff_first_BITS_145_TO_18___d69 = DEF_in_ff_first_BITS_145_TO_18___d69;
      vcd_write_val(sim_hdl, num++, DEF_in_ff_first_BITS_177_TO_146_8_CONCAT_0_CONCAT__ETC___d73, 322u);
      backing.DEF_in_ff_first_BITS_177_TO_146_8_CONCAT_0_CONCAT__ETC___d73 = DEF_in_ff_first_BITS_177_TO_146_8_CONCAT_0_CONCAT__ETC___d73;
      vcd_write_val(sim_hdl, num++, DEF_in_ff_first_BIT_0___d10, 1u);
      backing.DEF_in_ff_first_BIT_0___d10 = DEF_in_ff_first_BIT_0___d10;
      vcd_write_val(sim_hdl, num++, DEF_in_ff_first____d5, 178u);
      backing.DEF_in_ff_first____d5 = DEF_in_ff_first____d5;
      vcd_write_val(sim_hdl, num++, DEF_oddBeat__h767, 1u);
      backing.DEF_oddBeat__h767 = DEF_oddBeat__h767;
      vcd_write_val(sim_hdl, num++, DEF_v_prev_0_BITS_177_TO_146_1_CONCAT_in_ff_first__ETC___d91, 322u);
      backing.DEF_v_prev_0_BITS_177_TO_146_1_CONCAT_in_ff_first__ETC___d91 = DEF_v_prev_0_BITS_177_TO_146_1_CONCAT_in_ff_first__ETC___d91;
      vcd_write_val(sim_hdl, num++, DEF_v_prev___d80, 178u);
      backing.DEF_v_prev___d80 = DEF_v_prev___d80;
      vcd_write_val(sim_hdl, num++, DEF_x__h1002, 5u);
      backing.DEF_x__h1002 = DEF_x__h1002;
      vcd_write_val(sim_hdl, num++, DEF_x__h1014, 5u);
      backing.DEF_x__h1014 = DEF_x__h1014;
      vcd_write_val(sim_hdl, num++, DEF_x__h1026, 5u);
      backing.DEF_x__h1026 = DEF_x__h1026;
      vcd_write_val(sim_hdl, num++, DEF_x__h1038, 5u);
      backing.DEF_x__h1038 = DEF_x__h1038;
      vcd_write_val(sim_hdl, num++, DEF_x__h1050, 5u);
      backing.DEF_x__h1050 = DEF_x__h1050;
      vcd_write_val(sim_hdl, num++, DEF_x__h2201, 64u);
      backing.DEF_x__h2201 = DEF_x__h2201;
      vcd_write_val(sim_hdl, num++, DEF_x__h3358, 64u);
      backing.DEF_x__h3358 = DEF_x__h3358;
      vcd_write_val(sim_hdl, num++, DEF_x__h3368, 64u);
      backing.DEF_x__h3368 = DEF_x__h3368;
      vcd_write_val(sim_hdl, num++, DEF_x__h3420, 64u);
      backing.DEF_x__h3420 = DEF_x__h3420;
      vcd_write_val(sim_hdl, num++, DEF_x__h731, 64u);
      backing.DEF_x__h731 = DEF_x__h731;
      vcd_write_val(sim_hdl, num++, DEF_x__h845, 64u);
      backing.DEF_x__h845 = DEF_x__h845;
      vcd_write_val(sim_hdl, num++, DEF_x__h859, 5u);
      backing.DEF_x__h859 = DEF_x__h859;
      vcd_write_val(sim_hdl, num++, DEF_x__h882, 5u);
      backing.DEF_x__h882 = DEF_x__h882;
      vcd_write_val(sim_hdl, num++, DEF_x__h894, 5u);
      backing.DEF_x__h894 = DEF_x__h894;
      vcd_write_val(sim_hdl, num++, DEF_x__h906, 5u);
      backing.DEF_x__h906 = DEF_x__h906;
      vcd_write_val(sim_hdl, num++, DEF_x__h918, 5u);
      backing.DEF_x__h918 = DEF_x__h918;
      vcd_write_val(sim_hdl, num++, DEF_x__h930, 5u);
      backing.DEF_x__h930 = DEF_x__h930;
      vcd_write_val(sim_hdl, num++, DEF_x__h942, 5u);
      backing.DEF_x__h942 = DEF_x__h942;
      vcd_write_val(sim_hdl, num++, DEF_x__h954, 5u);
      backing.DEF_x__h954 = DEF_x__h954;
      vcd_write_val(sim_hdl, num++, DEF_x__h966, 5u);
      backing.DEF_x__h966 = DEF_x__h966;
      vcd_write_val(sim_hdl, num++, DEF_x__h978, 5u);
      backing.DEF_x__h978 = DEF_x__h978;
      vcd_write_val(sim_hdl, num++, DEF_x__h990, 5u);
      backing.DEF_x__h990 = DEF_x__h990;
      vcd_write_val(sim_hdl, num++, DEF_x_data__h1616, 256u);
      backing.DEF_x_data__h1616 = DEF_x_data__h1616;
      vcd_write_val(sim_hdl, num++, DEF_x_data__h2908, 256u);
      backing.DEF_x_data__h2908 = DEF_x_data__h2908;
      vcd_write_val(sim_hdl, num++, DEF_y__h1003, 5u);
      backing.DEF_y__h1003 = DEF_y__h1003;
      vcd_write_val(sim_hdl, num++, DEF_y__h1015, 5u);
      backing.DEF_y__h1015 = DEF_y__h1015;
      vcd_write_val(sim_hdl, num++, DEF_y__h1027, 5u);
      backing.DEF_y__h1027 = DEF_y__h1027;
      vcd_write_val(sim_hdl, num++, DEF_y__h1039, 5u);
      backing.DEF_y__h1039 = DEF_y__h1039;
      vcd_write_val(sim_hdl, num++, DEF_y__h1051, 5u);
      backing.DEF_y__h1051 = DEF_y__h1051;
      vcd_write_val(sim_hdl, num++, DEF_y__h856, 64u);
      backing.DEF_y__h856 = DEF_y__h856;
      vcd_write_val(sim_hdl, num++, DEF_y__h883, 5u);
      backing.DEF_y__h883 = DEF_y__h883;
      vcd_write_val(sim_hdl, num++, DEF_y__h895, 5u);
      backing.DEF_y__h895 = DEF_y__h895;
      vcd_write_val(sim_hdl, num++, DEF_y__h907, 5u);
      backing.DEF_y__h907 = DEF_y__h907;
      vcd_write_val(sim_hdl, num++, DEF_y__h919, 5u);
      backing.DEF_y__h919 = DEF_y__h919;
      vcd_write_val(sim_hdl, num++, DEF_y__h931, 5u);
      backing.DEF_y__h931 = DEF_y__h931;
      vcd_write_val(sim_hdl, num++, DEF_y__h943, 5u);
      backing.DEF_y__h943 = DEF_y__h943;
      vcd_write_val(sim_hdl, num++, DEF_y__h955, 5u);
      backing.DEF_y__h955 = DEF_y__h955;
      vcd_write_val(sim_hdl, num++, DEF_y__h967, 5u);
      backing.DEF_y__h967 = DEF_y__h967;
      vcd_write_val(sim_hdl, num++, DEF_y__h979, 5u);
      backing.DEF_y__h979 = DEF_y__h979;
      vcd_write_val(sim_hdl, num++, DEF_y__h991, 5u);
      backing.DEF_y__h991 = DEF_y__h991;
      vcd_write_val(sim_hdl, num++, PORT_datain_put, 178u);
      backing.PORT_datain_put = PORT_datain_put;
      vcd_write_val(sim_hdl, num++, PORT_dataout_get, 322u);
      backing.PORT_dataout_get = PORT_dataout_get;
    }
}

void MOD_mkStreamGearboxUp_16_32::vcd_prims(tVCDDumpType dt, MOD_mkStreamGearboxUp_16_32 &backing)
{
  INST_data_bytes.dump_VCD(dt, backing.INST_data_bytes);
  INST_eopCount.dump_VCD(dt, backing.INST_eopCount);
  INST_idle_cycles.dump_VCD(dt, backing.INST_idle_cycles);
  INST_inProgress.dump_VCD(dt, backing.INST_inProgress);
  INST_in_ff.dump_VCD(dt, backing.INST_in_ff);
  INST_oddBeat.dump_VCD(dt, backing.INST_oddBeat);
  INST_out_ff.dump_VCD(dt, backing.INST_out_ff);
  INST_sopCount.dump_VCD(dt, backing.INST_sopCount);
  INST_v_prev.dump_VCD(dt, backing.INST_v_prev);
}
