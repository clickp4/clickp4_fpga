/*
 * Generated by Bluespec Compiler, version 2014.07.A (build 34078, 2014-07-30)
 * 
 * On Sun Jun  4 00:06:35 CST 2017
 * 
 */

/* Generation options: */
#ifndef __mkMatchTable_ModuleL2SwitchSmac_h__
#define __mkMatchTable_ModuleL2SwitchSmac_h__

#include "bluesim_types.h"
#include "bs_module.h"
#include "bluesim_primitives.h"
#include "bs_vcd.h"


/* Class declaration for the mkMatchTable_ModuleL2SwitchSmac module */
class MOD_mkMatchTable_ModuleL2SwitchSmac : public Module {
 
 /* Clock handles */
 private:
  tClock __clk_handle_0;
 
 /* Clock gate handles */
 public:
  tUInt8 *clk_gate[0];
 
 /* Instantiation parameters */
 public:
  std::string const PARAM_param1;
 
 /* Module state */
 public:
  MOD_Fifo<tUInt64> INST_ret_ifc_delay2_ff;
  MOD_Fifo<tUInt64> INST_ret_ifc_delay_ff;
  MOD_Reg<tUInt64> INST_ret_ifc_dmhc_evictee_gslots_0;
  MOD_Reg<tUInt64> INST_ret_ifc_dmhc_evictee_gslots_1;
  MOD_Reg<tUInt64> INST_ret_ifc_dmhc_evictee_gslots_2;
  MOD_Reg<tUInt64> INST_ret_ifc_dmhc_evictee_gslots_3;
  MOD_Reg<tUInt32> INST_ret_ifc_dmhc_evictee_hvals_0;
  MOD_Reg<tUInt32> INST_ret_ifc_dmhc_evictee_hvals_1;
  MOD_Reg<tUInt32> INST_ret_ifc_dmhc_evictee_hvals_2;
  MOD_Reg<tUInt32> INST_ret_ifc_dmhc_evictee_hvals_3;
  MOD_Reg<tUWide> INST_ret_ifc_dmhc_evictee_mslot;
  MOD_BRAM<tUInt32,tUInt64,tUInt8> INST_ret_ifc_dmhc_hash_units_0_g_table;
  MOD_Reg<tUInt32> INST_ret_ifc_dmhc_hash_units_0_gslot_counter;
  MOD_Reg<tUInt8> INST_ret_ifc_dmhc_hash_units_0_init;
  MOD_Reg<tUInt8> INST_ret_ifc_dmhc_hash_units_0_is_miss;
  MOD_BRAM<tUInt32,tUInt64,tUInt8> INST_ret_ifc_dmhc_hash_units_1_g_table;
  MOD_Reg<tUInt32> INST_ret_ifc_dmhc_hash_units_1_gslot_counter;
  MOD_Reg<tUInt8> INST_ret_ifc_dmhc_hash_units_1_init;
  MOD_Reg<tUInt8> INST_ret_ifc_dmhc_hash_units_1_is_miss;
  MOD_BRAM<tUInt32,tUInt64,tUInt8> INST_ret_ifc_dmhc_hash_units_2_g_table;
  MOD_Reg<tUInt32> INST_ret_ifc_dmhc_hash_units_2_gslot_counter;
  MOD_Reg<tUInt8> INST_ret_ifc_dmhc_hash_units_2_init;
  MOD_Reg<tUInt8> INST_ret_ifc_dmhc_hash_units_2_is_miss;
  MOD_BRAM<tUInt32,tUInt64,tUInt8> INST_ret_ifc_dmhc_hash_units_3_g_table;
  MOD_Reg<tUInt32> INST_ret_ifc_dmhc_hash_units_3_gslot_counter;
  MOD_Reg<tUInt8> INST_ret_ifc_dmhc_hash_units_3_init;
  MOD_Reg<tUInt8> INST_ret_ifc_dmhc_hash_units_3_is_miss;
  MOD_Reg<tUInt8> INST_ret_ifc_dmhc_inited;
  MOD_Wire<tUInt8> INST_ret_ifc_dmhc_is_hit_wire;
  MOD_Wire<tUInt8> INST_ret_ifc_dmhc_ldvn_abort;
  MOD_Reg<tUInt8> INST_ret_ifc_dmhc_ldvn_start_reg;
  MOD_Reg<tUInt8> INST_ret_ifc_dmhc_ldvn_start_reg_1;
  MOD_Wire<tUInt8> INST_ret_ifc_dmhc_ldvn_start_reg_2;
  MOD_Wire<tUInt8> INST_ret_ifc_dmhc_ldvn_start_wire;
  MOD_Reg<tUInt8> INST_ret_ifc_dmhc_ldvn_state_can_overlap;
  MOD_Reg<tUInt8> INST_ret_ifc_dmhc_ldvn_state_fired;
  MOD_Wire<tUInt8> INST_ret_ifc_dmhc_ldvn_state_fired_1;
  MOD_ConfigReg<tUInt8> INST_ret_ifc_dmhc_ldvn_state_mkFSMstate;
  MOD_Wire<tUInt8> INST_ret_ifc_dmhc_ldvn_state_overlap_pw;
  MOD_Wire<tUInt8> INST_ret_ifc_dmhc_ldvn_state_set_pw;
  MOD_BRAM<tUInt8,tUWide,tUInt8> INST_ret_ifc_dmhc_m_table;
  MOD_Reg<tUInt8> INST_ret_ifc_dmhc_miss_service;
  MOD_Reg<tUInt8> INST_ret_ifc_dmhc_mslot_counter;
  MOD_Wire<tUInt8> INST_ret_ifc_dmhc_mslot_replacement_abort;
  MOD_Reg<tUInt8> INST_ret_ifc_dmhc_mslot_replacement_start_reg;
  MOD_Reg<tUInt8> INST_ret_ifc_dmhc_mslot_replacement_start_reg_1;
  MOD_Wire<tUInt8> INST_ret_ifc_dmhc_mslot_replacement_start_reg_2;
  MOD_Wire<tUInt8> INST_ret_ifc_dmhc_mslot_replacement_start_wire;
  MOD_Reg<tUInt8> INST_ret_ifc_dmhc_mslot_replacement_state_can_overlap;
  MOD_Reg<tUInt8> INST_ret_ifc_dmhc_mslot_replacement_state_fired;
  MOD_Wire<tUInt8> INST_ret_ifc_dmhc_mslot_replacement_state_fired_1;
  MOD_ConfigReg<tUInt8> INST_ret_ifc_dmhc_mslot_replacement_state_mkFSMstate;
  MOD_Wire<tUInt8> INST_ret_ifc_dmhc_mslot_replacement_state_overlap_pw;
  MOD_Wire<tUInt8> INST_ret_ifc_dmhc_mslot_replacement_state_set_pw;
  MOD_Reg<tUWide> INST_ret_ifc_dmhc_mslot_to_repair;
  MOD_Reg<tUInt64> INST_ret_ifc_dmhc_new_gslots_0;
  MOD_Reg<tUInt64> INST_ret_ifc_dmhc_new_gslots_1;
  MOD_Reg<tUInt64> INST_ret_ifc_dmhc_new_gslots_2;
  MOD_Reg<tUInt64> INST_ret_ifc_dmhc_new_gslots_3;
  MOD_Reg<tUInt32> INST_ret_ifc_dmhc_new_hvals_0;
  MOD_Reg<tUInt32> INST_ret_ifc_dmhc_new_hvals_1;
  MOD_Reg<tUInt32> INST_ret_ifc_dmhc_new_hvals_2;
  MOD_Reg<tUInt32> INST_ret_ifc_dmhc_new_hvals_3;
  MOD_Reg<tUWide> INST_ret_ifc_dmhc_new_mslot;
  MOD_Wire<tUInt64> INST_ret_ifc_dmhc_rec_value;
  MOD_Reg<tUInt8> INST_ret_ifc_dmhc_repair_g_index;
  MOD_Reg<tUInt64> INST_ret_ifc_dmhc_repair_gslot;
  MOD_Reg<tUInt64> INST_ret_ifc_dmhc_repair_gslots_0;
  MOD_Reg<tUInt64> INST_ret_ifc_dmhc_repair_gslots_1;
  MOD_Reg<tUInt64> INST_ret_ifc_dmhc_repair_gslots_2;
  MOD_Reg<tUInt64> INST_ret_ifc_dmhc_repair_gslots_3;
  MOD_Reg<tUInt32> INST_ret_ifc_dmhc_repair_hvals_0;
  MOD_Reg<tUInt32> INST_ret_ifc_dmhc_repair_hvals_1;
  MOD_Reg<tUInt32> INST_ret_ifc_dmhc_repair_hvals_2;
  MOD_Reg<tUInt32> INST_ret_ifc_dmhc_repair_hvals_3;
  MOD_Reg<tUWide> INST_ret_ifc_dmhc_repair_mslot;
  MOD_Reg<tUInt8> INST_ret_ifc_dmhc_stage;
  MOD_Fifo<tUInt64> INST_ret_ifc_dmhc_stage1_ff;
  MOD_Fifo<tUInt64> INST_ret_ifc_dmhc_stage2_ff;
  MOD_Reg<tUInt8> INST_ret_ifc_dmhc_victim_g_index;
  MOD_Reg<tUInt64> INST_ret_ifc_dmhc_victim_gslot;
  MOD_Reg<tUWide> INST_ret_ifc_dmhc_victim_mslot;
  MOD_Reg<tUInt8> INST_ret_ifc_dmhc_victim_mslot_addr;
  MOD_Fifo<tUInt64> INST_ret_ifc_readDataFifo;
  MOD_Fifo<tUInt64> INST_ret_ifc_readReqFifo;
 
 /* Constructor */
 public:
  MOD_mkMatchTable_ModuleL2SwitchSmac(tSimStateHdl simHdl,
				      char const *name,
				      Module *parent,
				      std::string ARG_param1);
 
 /* Symbol init methods */
 private:
  void init_symbols_0();
 
 /* Reset signal definitions */
 private:
  tUInt8 PORT_RST_N;
 
 /* Port definitions */
 public:
  tUInt8 PORT_EN_add_entry_put;
  tUWide PORT_add_entry_put;
 
 /* Publicly accessible definitions */
 public:
  tUInt8 DEF_WILL_FIRE_add_entry_put;
  tUInt8 DEF_WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l258c9;
  tUInt8 DEF_WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l251c9;
  tUInt8 DEF_WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l243c9;
  tUInt8 DEF_WILL_FIRE_RL_ret_ifc_dmhc_ldvn_action_l99c9;
  tUInt8 DEF_WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l201c9;
  tUInt8 DEF_WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l192c9;
  tUInt8 DEF_WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l182c9;
  tUInt8 DEF_WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l172c9;
  tUInt8 DEF_WILL_FIRE_RL_ret_ifc_dmhc_ldvn_action_l30c9;
  tUInt8 DEF_WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l164c9;
  tUInt8 DEF_WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l149c9;
  tUInt8 DEF_WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l138c9;
  tUInt8 DEF_WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l128c9;
  tUInt8 DEF_WILL_FIRE_RL_ret_ifc_dmhc_mslot_replacement_action_l121c9;
  tUInt8 DEF_WILL_FIRE_RL_ret_ifc_dmhc_ldvn_action_l107c9;
  tUInt8 DEF_WILL_FIRE_RL_ret_ifc_dmhc_ldvn_action_l60c9;
  tUInt8 DEF_WILL_FIRE_RL_ret_ifc_dmhc_ldvn_action_l52c9;
  tUInt8 DEF_WILL_FIRE_RL_ret_ifc_dmhc_ldvn_action_l41c9;
  tUInt8 DEF_WILL_FIRE_RL_ret_ifc_dmhc_ldvn_action_l22c9;
  tUInt8 DEF_ret_ifc_dmhc_inited___d956;
  tUInt8 DEF_ret_ifc_dmhc_hash_units_0_init__h386;
  tUInt8 DEF_ret_ifc_dmhc_mslot_replacement_state_mkFSMstat_ETC___d392;
  tUInt8 DEF_ret_ifc_dmhc_mslot_replacement_state_fired__h58278;
  tUInt8 DEF_ret_ifc_dmhc_mslot_replacement_abort_whas____d365;
  tUInt8 DEF_ret_ifc_dmhc_mslot_replacement_abort_wget____d366;
  tUInt8 DEF_ret_ifc_dmhc_mslot_replacement_start_reg_1__h58276;
  tUInt8 DEF_ret_ifc_dmhc_mslot_replacement_start_reg__h99148;
  tUInt8 DEF_ret_ifc_dmhc_miss_service__h117545;
  tUInt8 DEF__read_degree__h98626;
  tUInt8 DEF_ret_ifc_dmhc_mslot_replacement_state_mkFSMstat_ETC___d395;
  tUInt8 DEF_ret_ifc_dmhc_victim_gslot_37_BITS_1_TO_0_38_EQ_0___d939;
  tUInt8 DEF_ret_ifc_dmhc_mslot_replacement_abort_whas__65__ETC___d396;
  tUInt8 DEF_ret_ifc_dmhc_mslot_replacement_abort_whas__65__ETC___d367;
  tUInt8 DEF_ret_ifc_dmhc_mslot_replacement_abort_whas__65__ETC___d953;
 
 /* Local definitions */
 private:
  tUInt8 DEF_ret_ifc_dmhc_is_hit_wire_wget____d1202;
  tUInt8 DEF_ret_ifc_dmhc_is_hit_wire_whas____d1201;
  tUInt8 DEF_x2__h117629;
  tUInt64 DEF_v___1__h117497;
  tUInt64 DEF_v__h117299;
  tUInt64 DEF_v__h117027;
  tUInt64 DEF_v__h116897;
  tUInt64 DEF_v___1__h116728;
  tUInt64 DEF_v__h116638;
  tUInt64 DEF_v___1__h100806;
  tUInt64 DEF_v__h100157;
  tUInt64 DEF_v__h99978;
  tUInt64 DEF_v__h99415;
  tUInt64 DEF_v__h98751;
  tUWide DEF_ret_ifc_dmhc_mslot_to_repair___d64;
  tUWide DEF_ret_ifc_dmhc_new_mslot___d648;
  tUWide DEF_ret_ifc_dmhc_evictee_mslot___d400;
  tUWide DEF_ret_ifc_dmhc_m_table_a_read____d61;
  tUInt64 DEF_ret_ifc_dmhc_new_gslots_3___d850;
  tUInt64 DEF_ret_ifc_dmhc_new_gslots_2___d852;
  tUInt64 DEF_ret_ifc_dmhc_new_gslots_1___d854;
  tUInt64 DEF_ret_ifc_dmhc_new_gslots_0___d856;
  tUInt64 DEF_ret_ifc_dmhc_repair_gslots_3___d270;
  tUInt64 DEF_ret_ifc_dmhc_repair_gslots_2___d272;
  tUInt64 DEF_ret_ifc_dmhc_repair_gslots_1___d274;
  tUInt64 DEF_ret_ifc_dmhc_repair_gslots_0___d276;
  tUInt64 DEF_ret_ifc_dmhc_evictee_gslots_3___d630;
  tUInt64 DEF_ret_ifc_dmhc_evictee_gslots_2___d621;
  tUInt64 DEF_ret_ifc_dmhc_evictee_gslots_1___d612;
  tUInt64 DEF_ret_ifc_dmhc_evictee_gslots_0___d603;
  tUInt64 DEF_ret_ifc_dmhc_hash_units_3_g_table_a_read____d267;
  tUInt64 DEF_ret_ifc_dmhc_hash_units_2_g_table_a_read____d266;
  tUInt64 DEF_ret_ifc_dmhc_hash_units_1_g_table_a_read____d265;
  tUInt64 DEF_ret_ifc_dmhc_hash_units_0_g_table_a_read____d264;
  tUInt8 DEF_x2__h98807;
  tUInt8 DEF__read_degree__h95837;
  tUInt8 DEF__read_degree__h95815;
  tUInt8 DEF__read_degree__h95787;
  tUInt8 DEF__read_degree__h95759;
  tUInt8 DEF__read_degree__h36053;
  tUInt8 DEF__read_degree__h36031;
  tUInt8 DEF__read_degree__h35975;
  tUInt8 DEF__read_degree__h36003;
  tUInt8 DEF_ret_ifc_dmhc_is_hit_wire_whas__201_AND_ret_ifc_ETC___d1203;
  tUInt8 DEF_x__h98343;
  tUWide DEF__1_CONCAT_add_entry_put___d1230;
 
 /* Rules */
 public:
  void RL_ret_ifc_dmhc_hash_units_0_init_table();
  void RL_ret_ifc_dmhc_hash_units_1_init_table();
  void RL_ret_ifc_dmhc_hash_units_2_init_table();
  void RL_ret_ifc_dmhc_hash_units_3_init_table();
  void RL_ret_ifc_dmhc_ldvn_start_reg__dreg_update();
  void RL_ret_ifc_dmhc_ldvn_state_handle_abort();
  void RL_ret_ifc_dmhc_ldvn_state_fired__dreg_update();
  void RL_ret_ifc_dmhc_ldvn_state_every();
  void RL_ret_ifc_dmhc_ldvn_restart();
  void RL_ret_ifc_dmhc_ldvn_action_l22c9();
  void RL_ret_ifc_dmhc_ldvn_action_l30c9();
  void RL_ret_ifc_dmhc_ldvn_action_l41c9();
  void RL_ret_ifc_dmhc_ldvn_action_l52c9();
  void RL_ret_ifc_dmhc_ldvn_action_l60c9();
  void RL_ret_ifc_dmhc_ldvn_action_l99c9();
  void RL_ret_ifc_dmhc_ldvn_action_l107c9();
  void RL_ret_ifc_dmhc_ldvn_idle_l20c1();
  void RL_ret_ifc_dmhc_ldvn_fsm_start();
  void RL_ret_ifc_dmhc_mslot_replacement_start_reg__dreg_update();
  void RL_ret_ifc_dmhc_mslot_replacement_state_handle_abort();
  void RL_ret_ifc_dmhc_mslot_replacement_state_fired__dreg_update();
  void RL_ret_ifc_dmhc_mslot_replacement_state_every();
  void RL_ret_ifc_dmhc_mslot_replacement_restart();
  void RL_ret_ifc_dmhc_mslot_replacement_action_l121c9();
  void RL_ret_ifc_dmhc_mslot_replacement_action_l128c9();
  void RL_ret_ifc_dmhc_mslot_replacement_action_l138c9();
  void RL_ret_ifc_dmhc_mslot_replacement_action_l149c9();
  void RL_ret_ifc_dmhc_mslot_replacement_action_l164c9();
  void RL_ret_ifc_dmhc_mslot_replacement_action_l172c9();
  void RL_ret_ifc_dmhc_mslot_replacement_action_l182c9();
  void RL_ret_ifc_dmhc_mslot_replacement_action_l192c9();
  void RL_ret_ifc_dmhc_mslot_replacement_action_l201c9();
  void RL_ret_ifc_dmhc_mslot_replacement_action_l243c9();
  void RL_ret_ifc_dmhc_mslot_replacement_action_l251c9();
  void RL_ret_ifc_dmhc_mslot_replacement_action_l258c9();
  void RL_ret_ifc_dmhc_mslot_replacement_idle_l119c1();
  void RL_ret_ifc_dmhc_mslot_replacement_fsm_start();
  void RL_ret_ifc_dmhc_init_tables();
  void RL_ret_ifc_dmhc_lookup_gtables();
  void RL_ret_ifc_dmhc_lookup_mtable();
  void RL_ret_ifc_do_read();
  void RL_ret_ifc_do_delay();
  void RL_ret_ifc_do_resp();
  void __me_check_9();
  void __me_check_10();
  void __me_check_11();
  void __me_check_12();
  void __me_check_13();
  void __me_check_14();
  void __me_check_23();
  void __me_check_24();
  void __me_check_25();
  void __me_check_26();
  void __me_check_27();
  void __me_check_28();
  void __me_check_29();
  void __me_check_30();
  void __me_check_31();
  void __me_check_32();
  void __me_check_33();
 
 /* Methods */
 public:
  void METH_lookupPort_request_put(tUInt64 ARG_lookupPort_request_put);
  tUInt8 METH_RDY_lookupPort_request_put();
  tUInt64 METH_lookupPort_response_get();
  tUInt8 METH_RDY_lookupPort_response_get();
  void METH_add_entry_put(tUWide ARG_add_entry_put);
  tUInt8 METH_RDY_add_entry_put();
  void METH_delete_entry_put(tUInt8 ARG_delete_entry_put);
  tUInt8 METH_RDY_delete_entry_put();
  void METH_modify_entry_put(tUInt64 ARG_modify_entry_put);
  tUInt8 METH_RDY_modify_entry_put();
 
 /* Reset routines */
 public:
  void reset_RST_N(tUInt8 ARG_rst_in);
 
 /* Static handles to reset routines */
 public:
 
 /* Pointers to reset fns in parent module for asserting output resets */
 private:
 
 /* Functions for the parent module to register its reset fns */
 public:
 
 /* Functions to set the elaborated clock id */
 public:
  void set_clk_0(char const *s);
 
 /* State dumping routine */
 public:
  void dump_state(unsigned int indent);
 
 /* VCD dumping routines */
 public:
  unsigned int dump_VCD_defs(unsigned int levels);
  void dump_VCD(tVCDDumpType dt, unsigned int levels, MOD_mkMatchTable_ModuleL2SwitchSmac &backing);
  void vcd_defs(tVCDDumpType dt, MOD_mkMatchTable_ModuleL2SwitchSmac &backing);
  void vcd_prims(tVCDDumpType dt, MOD_mkMatchTable_ModuleL2SwitchSmac &backing);
};

#endif /* ifndef __mkMatchTable_ModuleL2SwitchSmac_h__ */
